#include "HD44780.h"

#include <i_lcd_drawer_interface.h>

namespace opensalad
{
    namespace lcd
    {
        const std::array<const std::array<byte_t, 8>, 256> HD44780::m_cgrom
        {{
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x00
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x01
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x02
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x03
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x04
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x05
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x06
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x07
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x08
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x09
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x0a
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x0b
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x0c
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x0d
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x0e
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //0x0f
            { 0x00, 0x08, 0x0c, 0x0e, 0x0f, 0x0e, 0x0c, 0x08 }, //0x10
            { 0x00, 0x02, 0x06, 0x0e, 0x1e, 0x0e, 0x06, 0x02 }, //0x11
            { 0x00, 0x00, 0x09, 0x12, 0x1b, 0x00, 0x00, 0x00 }, //0x12
            { 0x00, 0x00, 0x1b, 0x09, 0x12, 0x00, 0x00, 0x00 }, //0x13
            { 0x00, 0x04, 0x0e, 0x1f, 0x00, 0x04, 0x0e, 0x1f }, //0x14
            { 0x00, 0x1f, 0x0e, 0x04, 0x00, 0x1f, 0x0e, 0x04 }, //0x15
            { 0x00, 0x00, 0x0e, 0x1f, 0x1f, 0x1f, 0x0e, 0x00 }, //0x16
            { 0x00, 0x01, 0x01, 0x05, 0x09, 0x1f, 0x08, 0x04 }, //0x17
            { 0x00, 0x04, 0x0e, 0x15, 0x04, 0x04, 0x04, 0x04 }, //0x18
            { 0x00, 0x04, 0x04, 0x04, 0x04, 0x15, 0x0e, 0x04 }, //0x19
            { 0x00, 0x00, 0x04, 0x02, 0x1f, 0x02, 0x04, 0x00 }, //0x1a
            { 0x00, 0x00, 0x04, 0x08, 0x1f, 0x08, 0x04, 0x00 }, //0x1b
            { 0x00, 0x02, 0x04, 0x08, 0x04, 0x02, 0x00, 0x1f }, //0x1c
            { 0x00, 0x08, 0x04, 0x02, 0x04, 0x08, 0x00, 0x1f }, //0x1d
            { 0x00, 0x00, 0x04, 0x04, 0x0e, 0x0e, 0x1f, 0x00 }, //0x1e
            { 0x00, 0x00, 0x1f, 0x0e, 0x0e, 0x04, 0x04, 0x00 }, //0x1f
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }, //space
            { 0x00, 0x04, 0x04, 0x04, 0x04, 0x00, 0x00, 0x04 }, //!
            { 0x00, 0x00, 0x0a, 0x0a, 0x0a, 0x00, 0x00, 0x00 }, //"
            { 0x00, 0x0a, 0x0a, 0x1f, 0x0a, 0x1f, 0x0a, 0x0a }, //#
            { 0x00, 0x04, 0x0f, 0x14, 0x0e, 0x05, 0x1e, 0x04 }, //$
            { 0x00, 0x18, 0x19, 0x02, 0x04, 0x08, 0x13, 0x03 }, //%
            { 0x00, 0x0c, 0x12, 0x14, 0x08, 0x15, 0x12, 0x0d }, //&
            { 0x00, 0x0c, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00 }, //'
            { 0x00, 0x02, 0x04, 0x08, 0x08, 0x08, 0x04, 0x02 }, //(
            { 0x00, 0x08, 0x04, 0x02, 0x02, 0x02, 0x04, 0x08 }, //)
            { 0x00, 0x00, 0x04, 0x15, 0x0e, 0x15, 0x04, 0x00 }, //*
            { 0x00, 0x00, 0x04, 0x04, 0x1f, 0x04, 0x04, 0x00 }, //+
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x04, 0x08 }, //,
            { 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00 }, //-
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c }, //.
            { 0x00, 0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x00 }, ///
            { 0x00, 0x0e, 0x11, 0x13, 0x15, 0x19, 0x11, 0x0e }, //0
            { 0x00, 0x04, 0x0c, 0x04, 0x04, 0x04, 0x04, 0x0e }, //1
            { 0x00, 0x0e, 0x11, 0x01, 0x02, 0x04, 0x08, 0x1f }, //2
            { 0x00, 0x1f, 0x02, 0x04, 0x02, 0x01, 0x11, 0x0e }, //3
            { 0x00, 0x02, 0x06, 0x0a, 0x12, 0x1f, 0x02, 0x02 }, //4
            { 0x00, 0x1f, 0x10, 0x1e, 0x01, 0x01, 0x11, 0x0e }, //5
            { 0x00, 0x06, 0x08, 0x10, 0x1e, 0x11, 0x11, 0x0e }, //6
            { 0x00, 0x1f, 0x11, 0x01, 0x02, 0x04, 0x04, 0x04 }, //7
            { 0x00, 0x0e, 0x11, 0x11, 0x0e, 0x11, 0x11, 0x0e }, //8
            { 0x00, 0x0e, 0x11, 0x11, 0x0f, 0x01, 0x02, 0x0c }, //9
            { 0x00, 0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x0c, 0x00 }, //:
            { 0x00, 0x00, 0x0c, 0x0c, 0x00, 0x0c, 0x04, 0x08 }, //;
            { 0x00, 0x02, 0x04, 0x08, 0x10, 0x08, 0x04, 0x02 }, //<
            { 0x00, 0x00, 0x00, 0x1f, 0x00, 0x1f, 0x00, 0x00 }, //=
            { 0x00, 0x08, 0x04, 0x02, 0x01, 0x02, 0x04, 0x08 }, //>
            { 0x00, 0x0e, 0x11, 0x01, 0x02, 0x04, 0x00, 0x04 }, //?
            { 0x00, 0x0e, 0x11, 0x01, 0x0d, 0x15, 0x15, 0x0e }, //@
            { 0x00, 0x04, 0x0a, 0x11, 0x11, 0x1f, 0x11, 0x11 }, //A
            { 0x00, 0x1e, 0x11, 0x11, 0x1e, 0x11, 0x11, 0x1e }, //B
            { 0x00, 0x0e, 0x11, 0x10, 0x10, 0x10, 0x11, 0x0e }, //C
            { 0x00, 0x1c, 0x12, 0x11, 0x11, 0x11, 0x12, 0x1c }, //D
            { 0x00, 0x1f, 0x10, 0x10, 0x1e, 0x10, 0x10, 0x1f }, //E
            { 0x00, 0x1f, 0x10, 0x10, 0x1e, 0x10, 0x10, 0x10 }, //F
            { 0x00, 0x0e, 0x11, 0x10, 0x17, 0x11, 0x11, 0x0f }, //G
            { 0x00, 0x11, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x11 }, //H
            { 0x00, 0x0e, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0e }, //I
            { 0x00, 0x07, 0x02, 0x02, 0x02, 0x02, 0x12, 0x0c }, //J
            { 0x00, 0x11, 0x12, 0x14, 0x18, 0x14, 0x12, 0x11 }, //K
            { 0x00, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1f }, //L
            { 0x00, 0x11, 0x1b, 0x15, 0x15, 0x11, 0x11, 0x11 }, //M
            { 0x00, 0x11, 0x11, 0x19, 0x15, 0x13, 0x11, 0x11 }, //N
            { 0x00, 0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e }, //O
            { 0x00, 0x1e, 0x11, 0x11, 0x1e, 0x10, 0x10, 0x10 }, //P
            { 0x00, 0x0e, 0x11, 0x11, 0x11, 0x15, 0x12, 0x0d }, //Q
            { 0x00, 0x1e, 0x11, 0x11, 0x1e, 0x14, 0x12, 0x11 }, //R
            { 0x00, 0x0e, 0x11, 0x10, 0x0e, 0x01, 0x11, 0x0e }, //S
            { 0x00, 0x1f, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04 }, //T
            { 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0e }, //U
            { 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x0a, 0x04 }, //V
            { 0x00, 0x11, 0x11, 0x11, 0x15, 0x15, 0x15, 0x0a }, //W
            { 0x00, 0x11, 0x11, 0x0a, 0x04, 0x0a, 0x11, 0x11 }, //X
            { 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04, 0x04, 0x04 }, //Y
            { 0x00, 0x1f, 0x01, 0x02, 0x04, 0x08, 0x10, 0x1f }, //Z
            { 0x00, 0x0e, 0x08, 0x08, 0x08, 0x08, 0x08, 0x0e }, //[
            { 0x00, 0x00, 0x10, 0x08, 0x04, 0x02, 0x01, 0x00 }, //fwdslash
            { 0x00, 0x0e, 0x02, 0x02, 0x02, 0x02, 0x02, 0x0e }, //]
            { 0x00, 0x04, 0x0a, 0x11, 0x00, 0x00, 0x00, 0x00 }, //^
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f }, //_
            { 0x00, 0x08, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00 }, //`
            { 0x00, 0x00, 0x00, 0x0e, 0x01, 0x0f, 0x11, 0x0f }, //a
            { 0x00, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11, 0x1e }, //b
            { 0x00, 0x00, 0x00, 0x0e, 0x10, 0x10, 0x11, 0x0e }, //c
            { 0x00, 0x01, 0x01, 0x0d, 0x13, 0x11, 0x11, 0x0f }, //d
            { 0x00, 0x00, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0e }, //e
            { 0x00, 0x06, 0x09, 0x08, 0x1c, 0x08, 0x08, 0x08 }, //f
            { 0x00, 0x00, 0x00, 0x0f, 0x11, 0x0f, 0x01, 0x0e }, //g
            { 0x00, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11, 0x11 }, //h
            { 0x00, 0x04, 0x00, 0x04, 0x0c, 0x04, 0x04, 0x0e }, //i
            { 0x00, 0x02, 0x00, 0x06, 0x02, 0x02, 0x12, 0x0c }, //j
            { 0x00, 0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12 }, //k
            { 0x00, 0x0c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x0e }, //l
            { 0x00, 0x00, 0x00, 0x1a, 0x15, 0x15, 0x15, 0x15 }, //m
            { 0x00, 0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11 }, //n
            { 0x00, 0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e }, //o
            { 0x00, 0x00, 0x00, 0x1e, 0x11, 0x1e, 0x10, 0x10 }, //p
            { 0x00, 0x00, 0x00, 0x0d, 0x13, 0x0f, 0x01, 0x01 }, //q
            { 0x00, 0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10 }, //r
            { 0x00, 0x00, 0x00, 0x0e, 0x10, 0x0e, 0x01, 0x1e }, //s
            { 0x00, 0x08, 0x08, 0x1c, 0x08, 0x08, 0x09, 0x06 }, //t
            { 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d }, //u
            { 0x00, 0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04 }, //v
            { 0x00, 0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a }, //w
            { 0x00, 0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11 }, //x
            { 0x00, 0x00, 0x00, 0x11, 0x11, 0x0f, 0x01, 0x0e }, //y
            { 0x00, 0x00, 0x00, 0x1f, 0x02, 0x04, 0x08, 0x1f }, //z
            { 0x00, 0x02, 0x04, 0x04, 0x08, 0x04, 0x04, 0x02 }, //{
            { 0x00, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04 }, //|
            { 0x00, 0x08, 0x04, 0x04, 0x02, 0x04, 0x04, 0x08 }, //}
            { 0x00, 0x00, 0x00, 0x00, 0x0d, 0x12, 0x00, 0x00 }, //~
            { 0x00, 0x04, 0x0a, 0x11, 0x11, 0x11, 0x1f, 0x00 }, //shift
            { 0x00, 0x1f, 0x11, 0x10, 0x1e, 0x11, 0x11, 0x1e }, //0x80
            { 0x0f, 0x05, 0x05, 0x09, 0x11, 0x1f, 0x11, 0x11 }, //0x81
            { 0x00, 0x15, 0x15, 0x15, 0x0e, 0x15, 0x15, 0x15 }, //0x82
            { 0x00, 0x1e, 0x01, 0x01, 0x06, 0x01, 0x01, 0x1e }, //0x83
            { 0x00, 0x11, 0x11, 0x13, 0x15, 0x19, 0x11, 0x11 }, //0x84
            { 0x0a, 0x04, 0x11, 0x11, 0x13, 0x15, 0x19, 0x11 }, //0x85
            { 0x00, 0x0f, 0x05, 0x05, 0x05, 0x05, 0x15, 0x09 }, //0x86
            { 0x00, 0x1f, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11 }, //0x87
            { 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04, 0x08, 0x10 }, //0x88
            { 0x00, 0x11, 0x11, 0x11, 0x11, 0x11, 0x1f, 0x01 }, //0x89
            { 0x00, 0x11, 0x11, 0x11, 0x0f, 0x01, 0x01, 0x01 }, //0x8a
            { 0x00, 0x00, 0x15, 0x15, 0x15, 0x15, 0x15, 0x1f }, //0x8b
            { 0x00, 0x15, 0x15, 0x15, 0x15, 0x15, 0x1f, 0x01 }, //0x8c
            { 0x00, 0x18, 0x08, 0x08, 0x0e, 0x09, 0x09, 0x0e }, //0x8d
            { 0x00, 0x11, 0x11, 0x11, 0x19, 0x15, 0x15, 0x19 }, //0x8e
            { 0x00, 0x0e, 0x11, 0x05, 0x0b, 0x01, 0x11, 0x0e }, //0x8f
            { 0x00, 0x00, 0x00, 0x09, 0x15, 0x12, 0x12, 0x0d }, //0x90
            { 0x00, 0x04, 0x06, 0x05, 0x05, 0x04, 0x1c, 0x1c }, //0x91
            { 0x00, 0x1f, 0x11, 0x10, 0x10, 0x10, 0x10, 0x10 }, //0x92
            { 0x00, 0x00, 0x00, 0x1f, 0x0a, 0x0a, 0x0a, 0x13 }, //0x93
            { 0x00, 0x3f, 0x20, 0x10, 0x08, 0x10, 0x20, 0x3f }, //0x94
            { 0x00, 0x00, 0x00, 0x0f, 0x12, 0x12, 0x12, 0x0c }, //0x95
            { 0x06, 0x05, 0x07, 0x05, 0x05, 0x1d, 0x1b, 0x03 }, //0x96
            { 0x00, 0x00, 0x01, 0x0e, 0x14, 0x04, 0x04, 0x02 }, //0x97
            { 0x00, 0x04, 0x0e, 0x0e, 0x0e, 0x1f, 0x04, 0x00 }, //0x98
            { 0x00, 0x0e, 0x11, 0x11, 0x1f, 0x11, 0x11, 0x0e }, //0x99
            { 0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0a, 0x1b }, //0x9a
            { 0x00, 0x06, 0x09, 0x04, 0x0a, 0x11, 0x11, 0x0e }, //0x9b
            { 0x00, 0x00, 0x00, 0x0b, 0x15, 0x1a, 0x00, 0x00 }, //0x9c
            { 0x00, 0x00, 0x0a, 0x1f, 0x1f, 0x1f, 0x0e, 0x04 }, //0x9d
            { 0x00, 0x00, 0x00, 0x0e, 0x10, 0x0c, 0x11, 0x0e }, //0x9e
            { 0x00, 0x0e, 0x11, 0x11, 0x11, 0x11, 0x11, 0x11 }, //0x9f
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },
            { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }
        }};

        byte_t const* HD44780::get_char(char ch)
        {
            return m_cgrom.at(ch).data();
        }

        HD44780::HD44780(std::shared_ptr<iface::i_lcd_drawer_interface> drawer_interface)
			: m_ddram({ 0 })
            , m_cgram({ 0 })
            , m_drawer_interface(drawer_interface)
            , m_cursor_position(0)
            , m_width(16)
            , m_height(4)
            , m_data_changed(true)
        {
            init();
        }

        void HD44780::init()
        {
            m_running_thread = std::thread{ std::bind(&HD44780::run, this) };
            //m_drawer_interface->set_dimension({ m_width, m_height });
        }

        void HD44780::send_command(byte_t const& cmd)
        {

        }

        void HD44780::send_data(byte_t const& data)
        {
            m_ddram[m_cursor_position++] = data;

            position_t pos = { (byte_t)(m_cursor_position % m_width), (byte_t)(m_cursor_position / m_width) };
			//m_drawer_interface->set_char_at(pos, data);
            m_data_changed = true;
        }

        byte_t HD44780::get_status()
        {
			return 0;
        }

        byte_t HD44780::get_data()
        {
			return 0;
        }

        void HD44780::run()
        {
            while (1)
            {
                if (m_data_changed)
                {
					m_drawer_interface->draw((char*)m_ddram.data(), m_width, m_height);
                    m_data_changed = false;
                    std::this_thread::sleep_for(std::chrono::milliseconds(30));
                }
            }
        }
    }
}